struct A begin
    int aa = 2;
    bool find (int arg) begin
        set begin
            int a; /* Err 19 */
            return arg /* Err 18 */
            return; /* Err 18 */
        end
        get begin
            bool b = false; /* Err 19 */
            /* return arg */
        end
    end
end

int function(int arg1, bool arg2) begin 
    int a = 0; /* Err 20 */
end

int function2(fptr<int, int -> bool> arg1, list #fptr<bool -> list #int> arg2) begin
    return 12;
    return false; /* Err 10 */
end

void foo(int arg) begin
    int a;
    while(true) begin
        int b;
        if(true) begin
            int c = b;
        end
        else begin
            int d = c;
            d = arg;
        end
        c = b;
        b = arg;
    end
end

main() begin
/*    list # list #list #list #struct A a;
    int b = true & false;
    list #list #fptr<list #struct a -> int> fprt1; */

    int a2 = 2;
    bool c2 = false;
    list #int b2;
    int c = a2[c2]; /*Err 13&14*/
    a2 = size(a2); /* Err 15 */
    append(c2, a2); /* Err 16 */
    append(b2, c2); /* Err 17 */
    return /* Err 18 */
    display(a2);
    display(c2);
    display(b2); /* Err 8 */
    display(a2.bc);
    struct A aa;
    display(aa.find);
    display(aa.ab); /* Err 3 */
    a2 = function(a2, a2); /* Err 11 */
    fptr<int -> bool> fptr2;
    list #fptr<bool -> list #list #int> lis2;
    a2 = function2(fptr2, lis2); /* Err 11
     */
    return foo(); /* Err 9 */
    display(foo()); /*Err 9 */
    a2 = append(lis2, foo()); /* Err 9 */
    function(foo(), foo());
    a2(a3); /* Err 7&1 */

    while(a2) begin
        display(a2); /* Err 5 */
    end

    if(a2) begin
        display(b2); /* Err 5 */
    end

    a2 = lis2 < 1; /* Err 4 */

    struct A b;

    while(a2) begin
        int a;
        if(true) begin
            int x;
        end
        else begin
            bool y;
        end
    end

    1 + 2 = 3;
    b.ss = 4;
    s.a = 5;

end